import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
url="https://drive.google.com/file/d/1UIUSCHSz8FACkMive6k9C8ruvu-MBZR1/view?usp=sharing"
path='https://drive.google.com/uc?export=download&id='+url.split('/')[-2]
data=pd.read_csv(path) 
data.head()
data.info()
data.describe()
plt.scatter(x=data.study_hours,y=data.student_marks)
plt.xlabel("Study Hours")
plt.ylabel("Study Time")
plt.title("Study Hours Vs Student Marks ")
plt.show()
data.isnull().sum()
data.mean()
data2=data.fillna(data.mean())
data2.isnull().sum()
data2.head()
x=data2.drop("student_marks", axis="columns")
y=data2.drop("study_hours",axis="columns")
print("shape of x",x.shape)
print("shape of y", y.shape)
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.2, random_state=51)
print("shape of X Train",X_train.shape)
print("shape of Y Train",Y_train.shape)
print("shape of X Test", X_test.shape)
print("shape of Y Test",Y_test.shape)
from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(X_train,Y_train)
lr.coef_
lr.intercept_
m= 3.93
 c= 50.44
 y= m*12+c
 y
 lr.predict([[4]])[0][0].round(2)
 y_pred=lr.predict(X_test)
y_pred
pd.DataFrame(np.c_[X_test,Y_test,y_pred], columns=["study_hours","student_marks_original","student_marks_predicted"])
lr.score(X_test,Y_test)
plt.scatter(X_test,Y_test)
plt.scatter(X_test,Y_test)
plt.plot(X_train,lr.predict(X_train),color="red")
import joblib
joblib.dump(lr,"Student_Marks_Predictor.pkl")
model=joblib.load("Student_Marks_Predictor.pkl")
model.predict([[5]])
